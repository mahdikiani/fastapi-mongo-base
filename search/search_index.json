{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"fastapi-mongo-base","text":"<p>Welcome to the documentation for fastapi-mongo-base!</p> <p>This package provides base classes and utilities for integrating FastAPI with MongoDB, streamlining the development of robust, scalable APIs.</p> <ul> <li>Installation</li> <li>Usage</li> <li>Contributing</li> <li>Changelog</li> <li>License</li> </ul>"},{"location":"boilerplate/","title":"Boilerplate: FastAPIMongoLaunchpad","text":"<p>The FastAPIMongoLaunchpad is a production-ready boilerplate for building FastAPI applications with MongoDB integration.</p>"},{"location":"boilerplate/#features","title":"Features","text":"<ul> <li>Pre-built CRUD operations</li> <li>MongoDB integration with Beanie ODM</li> <li>Modular architecture</li> <li>Docker and Traefik support</li> <li>Environment configuration</li> <li>Ready-to-use project structure</li> </ul>"},{"location":"boilerplate/#getting-started","title":"Getting Started","text":"<ol> <li>Clone the boilerplate:</li> </ol> <pre><code>git clone https://github.com/mahdikiani/FastAPIMongoLaunchpad.git\ncd FastAPIMongoLaunchpad\ncp sample.env .env\n</code></pre> <ol> <li>Start the application:</li> </ol> <pre><code>docker compose up --build\n</code></pre> <ol> <li>Access your API at http://localhost:8000/api/v1/docs</li> </ol>"},{"location":"boilerplate/#project-structure","title":"Project Structure","text":"<p>See the README for a detailed project structure and more examples. </p>"},{"location":"changelog/","title":"Changelog","text":"<p>All notable changes to this project will be documented here.</p>"},{"location":"changelog/#01212","title":"0.12.12","text":"<ul> <li>Initial documentation structure</li> <li>Improved developer onboarding</li> <li>Added Docker and boilerplate guides </li> </ul>"},{"location":"contributing/","title":"Contributing","text":"<p>Thank you for considering contributing to fastapi-mongo-base!</p>"},{"location":"contributing/#how-to-contribute","title":"How to Contribute","text":"<ul> <li>Fork the repository</li> <li>Create a new branch</li> <li>Make your changes</li> <li>Submit a pull request</li> </ul> <p>Please follow the code style and add tests for new features. </p>"},{"location":"endpoints/","title":"Endpoints &amp; Customization","text":""},{"location":"endpoints/#controlling-endpoints","title":"Controlling Endpoints","text":"<p>You can enable, disable, or customize endpoints by subclassing <code>AbstractBaseRouter</code> and overriding its methods.</p>"},{"location":"endpoints/#example-disable-delete-endpoint","title":"Example: Disable Delete Endpoint","text":"<pre><code>from fastapi_mongo_base.routes import AbstractBaseRouter\n\nclass MyRouter(AbstractBaseRouter):\n    def __init__(self):\n        super().__init__(model=MyModel)\n\n    def config_routes(self, **kwargs):\n        super().config_routes(update_route=False)\n</code></pre>"},{"location":"endpoints/#adding-custom-endpoints","title":"Adding Custom Endpoints","text":"<p>You can add custom endpoints for complex queries or task processing:</p> <pre><code>from fastapi import APIRouter, Depends\nfrom .models import MyModel\n\nrouter = APIRouter()\n\n@router.get(\"/custom-search\")\ndef custom_search(query: str):\n    # Implement complex query logic here\n    return MyModel.find_custom(query)\n</code></pre>"},{"location":"endpoints/#task-processing-example","title":"Task Processing Example","text":"<p>For background tasks, use FastAPI's <code>BackgroundTasks</code>:</p> <pre><code>from fastapi import BackgroundTasks\n\n@router.post(\"/process-task\")\ndef process_task(data: dict, background_tasks: BackgroundTasks):\n    background_tasks.add_task(long_running_task, data)\n    return {\"status\": \"processing\"}\n</code></pre> <p>See the Tutorial for a full walkthrough. </p>"},{"location":"installation/","title":"Installation","text":"<p>Instructions for installing fastapi-mongo-base.</p> <pre><code>pip install fastapi-mongo-base\n</code></pre> <p>For development:</p> <pre><code>git clone https://github.com/mahdikiani/fastapi-mongo-base-app.git\ncd fastapi-mongo-base\npip install -e .\n</code></pre>"},{"location":"license/","title":"License","text":"<p>This project is licensed under the MIT License. See the LICENSE.txt file for details. </p>"},{"location":"quickstart/","title":"Quick Start","text":"<p>Get up and running with fastapi-mongo-base in minutes!</p>"},{"location":"quickstart/#minimal-example","title":"Minimal Example","text":"<pre><code># app/main.py\nfrom fastapi_mongo_base.core import config, app_factory\nfrom fastapi_mongo_base.models import BaseEntity\nfrom fastapi_mongo_base.routes import AbstractBaseRouter\nfrom fastapi_mongo_base.schemas import BaseEntitySchema\n\nclass ItemSchema(BaseEntity):\n    name: str\n    description: str | None = None\n\nclass Item(BaseEntity):\n    name: str\n    description: str | None = None\n\nclass ItemRouter(AbstractBaseRouter):\n    model = Item\n    schema = ItemSchema\n\n\n\n@dataclasses.dataclass\nclass Settings(config.Settings):\n    project_name: str = \"sample fastapi mongo base project\"\n    base_dir: Path = Path(__file__).parent\n    base_path: str = \"\"\n    mongo_uri: str = \"mongodb://localhost:27017\"\n\n\napp = app_factory.create_app(settings=Settings())\napp.include_router(TestRouter().router)\n\n</code></pre>"},{"location":"quickstart/#running-locally","title":"Running Locally","text":"<ol> <li>Install dependencies:</li> </ol> <pre><code>pip install fastapi-mongo-base uvicorn\n</code></pre> <ol> <li>Start MongoDB (locally or with Docker):</li> </ol> <pre><code>docker run -d -p 27017:27017 --name mongo mongo\n</code></pre> <ol> <li>Run your app:</li> </ol> <pre><code>uvicorn app.main:app --reload\n</code></pre>"},{"location":"quickstart/#running-with-docker-compose","title":"Running with Docker Compose","text":"<ol> <li>Copy the docker-compose.yml from the boilerplate or create your own:</li> </ol> <pre><code>services:\n    mongo:\n        image: mongo:latest\n        ports:\n            - 27017:27017\n    app:\n        build: .\n        ports:\n            - 8000:8000\n        environment:\n            - MONGO_URI=mongodb://mongo:27017/db\n        depends_on:\n            - mongo\n</code></pre> <ol> <li>Start everything:</li> </ol> <pre><code>docker compose up --build\n</code></pre> <p>Your API will be available at http://localhost:8000/docs </p>"},{"location":"settings/","title":"Settings","text":"<p>The <code>Settings</code> class manages configuration for your FastAPI app, including MongoDB connection and other environment variables.</p>"},{"location":"settings/#example","title":"Example","text":"<pre><code>from fastapi_mongo_base.core.config import Settings\nsettings = Settings()\nprint(settings.mongo_uri)\n</code></pre>"},{"location":"settings/#common-environment-variables","title":"Common Environment Variables","text":"<ul> <li><code>MONGO_URI</code>: MongoDB connection string (e.g., <code>mongodb://localhost:27017/db</code>)</li> <li><code>APP_ENV</code>: Application environment (e.g., <code>development</code>, <code>production</code>)</li> <li><code>BASE_PATH</code>: API base path (e.g., <code>/api/v1</code>)</li> </ul>"},{"location":"settings/#example-env","title":"Example .env","text":"<pre><code>MONGO_URI=mongodb://localhost:27017/db\nAPP_ENV=development\nBASE_PATH=/api/v1\n</code></pre> <p>For a full list of settings, see the <code>Settings</code> class in your <code>config.py</code> file. </p>"},{"location":"tutorial/","title":"Tutorial: Building a Books Module","text":"<p>This tutorial walks you through creating a complete Books module using fastapi-mongo-base.</p>"},{"location":"tutorial/#1-create-the-module-directory","title":"1. Create the Module Directory","text":"<pre><code>mkdir -p app/apps/books\ncd app/apps/books\ntouch __init__.py models.py schemas.py routes.py services.py\n</code></pre>"},{"location":"tutorial/#2-define-schemas","title":"2. Define Schemas","text":"<pre><code># schemas.py\nfrom fastapi_mongo_base.schemas import BaseEntitySchema\n\nclass BookSchema(BaseEntitySchema):\n    title: str\n    author: str\n    publish_year: int\n    isbn: str | None = None\n</code></pre>"},{"location":"tutorial/#3-create-the-model","title":"3. Create the Model","text":"<pre><code># models.py\nfrom fastapi_mongo_base.models import BaseEntity\nfrom .schemas import BookSchema\n\nclass Book(BookSchema, BaseEntity):\n    \"\"\"Book model that inherits from both BookSchema and BaseEntity\"\"\"\n    pass\n</code></pre>"},{"location":"tutorial/#4-set-up-routes","title":"4. Set Up Routes","text":"<pre><code># routes.py\nfrom fastapi_mongo_base.routes import AbstractBaseRouter\nfrom . import models, schemas\n\nclass BookRouter(AbstractBaseRouter):\n    def __init__(self):\n        super().__init__(model=models.Book, schema=schemas.BookSchema)\n\nrouter = BookRouter().router\n</code></pre>"},{"location":"tutorial/#5-register-the-router","title":"5. Register the Router","text":"<pre><code># server/server.py\nfrom fastapi_mongo_base.core import app_factory\nfrom apps.books import router as book_router\nfrom . import config\n\napp = app_factory.create_app(settings=config.Settings())\napp.include_router(book_router, prefix=f\"{config.Settings.base_path}/books\")\n</code></pre>"},{"location":"tutorial/#6-run-the-project","title":"6. Run the Project","text":"<ul> <li>With Docker Compose:   <code>bash   docker compose up --build -d</code></li> <li>Or locally:   <code>bash   uvicorn app.main:app --reload</code></li> </ul>"},{"location":"tutorial/#7-access-the-api","title":"7. Access the API","text":"<ul> <li>Swagger UI: http://localhost:8000/api/v1/docs</li> <li>ReDoc: http://localhost:8000/api/v1/redoc </li> </ul>"},{"location":"usage/","title":"Usage","text":"<p>Basic usage examples for fastapi-mongo-base.</p>"},{"location":"usage/#2-define-schemas-and-models","title":"2. Define Schemas and Models","text":"<p>schemas.py</p> <pre><code>from fastapi_mongo_base.schemas import BaseEntitySchema\n\nclass BookSchema(BaseEntitySchema):\n    title: str\n    author: str\n    publish_year: int\n    isbn: str | None = None\n</code></pre> <p>models.py</p> <pre><code>from fastapi_mongo_base.models import BaseEntity\nfrom .schemas import BookSchema\n\nclass Book(BookSchema, BaseEntity):\n    \"\"\"Book model that inherits from both BookSchema and BaseEntity\"\"\"\n    pass\n</code></pre>"},{"location":"usage/#3-create-and-register-routers","title":"3. Create and Register Routers","text":"<p>routes.py</p> <pre><code>from fastapi_mongo_base.routes import AbstractBaseRouter\nfrom . import models, schemas\n\nclass BookRouter(AbstractBaseRouter):\n    model = models.Book\n    schema = schemas.BookSchema\n\nrouter = BookRouter().router\n</code></pre> <p>server/server.py</p> <pre><code>from fastapi import FastAPI\nfrom apps.books.routes import router as book_router\nfrom .config import Settings\n\napp = FastAPI()\napp.include_router(book_router, prefix=f\"{Settings().base_path}/books\")\n</code></pre>"},{"location":"usage/#4-mongodb-configuration","title":"4. MongoDB Configuration","text":"<p>Set your MongoDB URI in <code>.env</code> or as an environment variable:</p> <pre><code>MONGO_URI=mongodb://localhost:27017/db\n</code></pre> <ul> <li>For Docker, use <code>mongo</code> as the hostname: <code>MONGO_URI=mongodb://mongo:27017/db</code></li> </ul>"},{"location":"usage/#5-running-the-application","title":"5. Running the Application","text":"<ul> <li>Locally:</li> </ul> <pre><code>pip install fastapi-mongo-base uvicorn\n\ndocker run -d -p 27017:27017 --name mongo mongo\n\nuvicorn app.main:app --reload\n</code></pre> <ul> <li>With Docker Compose:   See Quick Start for a full example.</li> </ul>"},{"location":"usage/#6-custom-endpoints","title":"6. Custom Endpoints","text":"<p>You can add custom endpoints for advanced queries or background tasks. See Endpoints &amp; Customization for details.</p>"},{"location":"usage/#7-more-resources","title":"7. More Resources","text":"<ul> <li>Quick Start</li> <li>Tutorial</li> <li>Boilerplate Project</li> </ul>"}]}